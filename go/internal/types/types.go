// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2

package types

type Position struct {
	EntryOid         int64       `json:"entry_oid"`
	RiskUsd          float64     `json:"risk_usd"`
	Confidence       float64     `json:"confidence"`
	IndexCol         interface{} `json:"index_col"`
	ExitPlan         interface{} `json:"exit_plan"`
	EntryTime        float64     `json:"entry_time"`
	Symbol           string      `json:"symbol"`
	EntryPrice       float64     `json:"entry_price"`
	TpOid            int64       `json:"tp_oid"`
	Margin           float64     `json:"margin"`
	WaitForFill      bool        `json:"wait_for_fill"`
	SlOid            int64       `json:"sl_oid"`
	Oid              int64       `json:"oid"`
	CurrentPrice     float64     `json:"current_price"`
	ClosedPnl        float64     `json:"closed_pnl"`
	LiquidationPrice float64     `json:"liquidation_price"`
	Commission       float64     `json:"commission"`
	Leverage         float64     `json:"leverage"`
	Slippage         float64     `json:"slippage"`
	Quantity         float64     `json:"quantity"`
	UnrealizedPnl    float64     `json:"unrealized_pnl"`
}

type AccountTotal struct {
	Id                         string              `json:"id"`
	ModelId                    string              `json:"model_id"`
	Timestamp                  float64             `json:"timestamp"`
	DollarEquity               float64             `json:"dollar_equity"`
	RealizedPnl                float64             `json:"realized_pnl"`
	TotalUnrealizedPnl         float64             `json:"total_unrealized_pnl"`
	CumPnlPct                  float64             `json:"cum_pnl_pct"`
	SharpeRatio                float64             `json:"sharpe_ratio"`
	SinceInceptionHourlyMarker int                 `json:"since_inception_hourly_marker"`
	SinceInceptionMinuteMarker int                 `json:"since_inception_minute_marker"`
	Positions                  map[string]Position `json:"positions"`
}

type AccountTotalsRequest struct {
	LastHourlyMarker int `form:"lastHourlyMarker,optional"`
}

type AccountTotalsResponse struct {
	AccountTotals        []AccountTotal `json:"accountTotals"`
	LastHourlyMarkerRead int            `json:"lastHourlyMarkerRead"`
	ServerTime           int64          `json:"serverTime"`
}

type AccountValue struct {
	Timestamp int64   `json:"timestamp"`
	Value     float64 `json:"value"`
}

type AnalyticsResponse struct {
	Analytics  []ModelAnalytics `json:"analytics"`
	ServerTime int64            `json:"serverTime"`
}

type BreakdownTable struct {
	StdNetPnl                  float64 `json:"std_net_pnl,omitempty"`
	TotalFeesPaid              float64 `json:"total_fees_paid,omitempty"`
	OverallPnlWithoutFees      float64 `json:"overall_pnl_without_fees,omitempty"`
	TotalFeesAsPctOfPnl        float64 `json:"total_fees_as_pct_of_pnl,omitempty"`
	OverallPnlWithFees         float64 `json:"overall_pnl_with_fees,omitempty"`
	AvgTakerFee                float64 `json:"avg_taker_fee,omitempty"`
	StdGrossPnl                float64 `json:"std_gross_pnl,omitempty"`
	AvgNetPnl                  float64 `json:"avg_net_pnl,omitempty"`
	BiggestNetLoss             float64 `json:"biggest_net_loss,omitempty"`
	BiggestNetGain             float64 `json:"biggest_net_gain,omitempty"`
	AvgGrossPnl                float64 `json:"avg_gross_pnl,omitempty"`
	StdTakerFee                float64 `json:"std_taker_fee,omitempty"`
	StdLosersNotional          float64 `json:"std_losers_notional,omitempty"`
	StdWinnersNotional         float64 `json:"std_winners_notional,omitempty"`
	AvgWinnersNetPnl           float64 `json:"avg_winners_net_pnl,omitempty"`
	WinRate                    float64 `json:"win_rate,omitempty"`
	StdLosersNetPnl            float64 `json:"std_losers_net_pnl,omitempty"`
	AvgLosersNetPnl            float64 `json:"avg_losers_net_pnl,omitempty"`
	StdLosersHoldingPeriod     float64 `json:"std_losers_holding_period,omitempty"`
	AvgLosersNotional          float64 `json:"avg_losers_notional,omitempty"`
	AvgLosersHoldingPeriod     float64 `json:"avg_losers_holding_period,omitempty"`
	AvgWinnersHoldingPeriod    float64 `json:"avg_winners_holding_period,omitempty"`
	StdWinnersNetPnl           float64 `json:"std_winners_net_pnl,omitempty"`
	AvgWinnersNotional         float64 `json:"avg_winners_notional,omitempty"`
	StdWinnersHoldingPeriod    float64 `json:"std_winners_holding_period,omitempty"`
	StdLongsHoldingPeriod      float64 `json:"std_longs_holding_period,omitempty"`
	StdLongsNotional           float64 `json:"std_longs_notional,omitempty"`
	StdShortsNotional          float64 `json:"std_shorts_notional,omitempty"`
	NumLongTrades              int     `json:"num_long_trades,omitempty"`
	AvgLongsNotional           float64 `json:"avg_longs_notional,omitempty"`
	AvgShortsHoldingPeriod     float64 `json:"avg_shorts_holding_period,omitempty"`
	AvgShortsNetPnl            float64 `json:"avg_shorts_net_pnl,omitempty"`
	AvgLongsNetPnl             float64 `json:"avg_longs_net_pnl,omitempty"`
	StdShortsHoldingPeriod     float64 `json:"std_shorts_holding_period,omitempty"`
	NumShortTrades             int     `json:"num_short_trades,omitempty"`
	LongShortTradesRatio       float64 `json:"long_short_trades_ratio,omitempty"`
	StdShortsNetPnl            float64 `json:"std_shorts_net_pnl,omitempty"`
	AvgLongsHoldingPeriod      float64 `json:"avg_longs_holding_period,omitempty"`
	StdLongsNetPnl             float64 `json:"std_longs_net_pnl,omitempty"`
	AvgShortsNotional          float64 `json:"avg_shorts_notional,omitempty"`
	NumShortSignals            int     `json:"num_short_signals,omitempty"`
	AvgConfidenceClose         float64 `json:"avg_confidence_close,omitempty"`
	AvgLeverageLong            float64 `json:"avg_leverage_long,omitempty"`
	StdLeverage                float64 `json:"std_leverage,omitempty"`
	PctMinsFlatCombined        float64 `json:"pct_mins_flat_combined,omitempty"`
	NumCloseSignals            int     `json:"num_close_signals,omitempty"`
	MinsLongCombined           float64 `json:"mins_long_combined,omitempty"`
	StdConfidence              float64 `json:"std_confidence,omitempty"`
	LongSignalPct              float64 `json:"long_signal_pct,omitempty"`
	MinsShortCombined          float64 `json:"mins_short_combined,omitempty"`
	NumHoldSignals             int     `json:"num_hold_signals,omitempty"`
	StdConfidenceShort         float64 `json:"std_confidence_short,omitempty"`
	AvgLeverage                float64 `json:"avg_leverage,omitempty"`
	MedianLeverage             float64 `json:"median_leverage,omitempty"`
	HoldSignalPct              float64 `json:"hold_signal_pct,omitempty"`
	CloseSignalPct             float64 `json:"close_signal_pct,omitempty"`
	AvgConfidenceLong          float64 `json:"avg_confidence_long,omitempty"`
	AvgConfidence              float64 `json:"avg_confidence,omitempty"`
	MedianConfidence           float64 `json:"median_confidence,omitempty"`
	TotalSignals               int     `json:"total_signals,omitempty"`
	ShortSignalPct             float64 `json:"short_signal_pct,omitempty"`
	StdLeverageLong            float64 `json:"std_leverage_long,omitempty"`
	NumLongSignals             int     `json:"num_long_signals,omitempty"`
	LongShortRatio             float64 `json:"long_short_ratio,omitempty"`
	PctMinsShortCombined       float64 `json:"pct_mins_short_combined,omitempty"`
	StdConfidenceHold          float64 `json:"std_confidence_hold,omitempty"`
	MinsFlatCombined           float64 `json:"mins_flat_combined,omitempty"`
	StdLeverageShort           float64 `json:"std_leverage_short,omitempty"`
	StdConfidenceLong          float64 `json:"std_confidence_long,omitempty"`
	AvgConfidenceHold          float64 `json:"avg_confidence_hold,omitempty"`
	AvgConfidenceShort         float64 `json:"avg_confidence_short,omitempty"`
	StdConfidenceClose         float64 `json:"std_confidence_close,omitempty"`
	AvgLeverageShort           float64 `json:"avg_leverage_short,omitempty"`
	PctMinsLongCombined        float64 `json:"pct_mins_long_combined,omitempty"`
	MaxInvocationBreakMins     float64 `json:"max_invocation_break_mins,omitempty"`
	StdInvocationBreakMins     float64 `json:"std_invocation_break_mins,omitempty"`
	NumInvocations             int     `json:"num_invocations,omitempty"`
	MinInvocationBreakMins     float64 `json:"min_invocation_break_mins,omitempty"`
	AvgInvocationBreakMins     float64 `json:"avg_invocation_break_mins,omitempty"`
	AvgConvoLeverage           float64 `json:"avg_convo_leverage,omitempty"`
	AvgHoldingPeriodMins       float64 `json:"avg_holding_period_mins,omitempty"`
	AvgTakeProfitDistancePct   float64 `json:"avg_take_profit_distance_pct,omitempty"`
	MedianHoldingPeriodMins    float64 `json:"median_holding_period_mins,omitempty"`
	StdSizeOfTradeNotional     float64 `json:"std_size_of_trade_notional,omitempty"`
	AvgSizeOfTradeNotional     float64 `json:"avg_size_of_trade_notional,omitempty"`
	TotalTrades                int     `json:"total_trades,omitempty"`
	MedianSizeOfTradeNotional  float64 `json:"median_size_of_trade_notional,omitempty"`
	AvgSizeOfTradePortfolioPct float64 `json:"avg_size_of_trade_portfolio_pct,omitempty"`
	StdHoldingPeriodMins       float64 `json:"std_holding_period_mins,omitempty"`
	AvgStopLossDistancePct     float64 `json:"avg_stop_loss_distance_pct,omitempty"`
	StdSizeOfTradePortfolioPct float64 `json:"std_size_of_trade_portfolio_pct,omitempty"`
	MedianConvoLeverage        float64 `json:"median_convo_leverage,omitempty"`
}

type CryptoPrice struct {
	Symbol    string  `json:"symbol"`
	Price     float64 `json:"price"`
	Timestamp int64   `json:"timestamp"`
}

type CryptoPricesResponse struct {
	Prices     map[string]CryptoPrice `json:"prices"`
	ServerTime int64                  `json:"serverTime"`
}

type LeaderboardEntry struct {
	Id          string  `json:"id"`
	NumTrades   int     `json:"num_trades"`
	Sharpe      float64 `json:"sharpe"`
	WinDollars  float64 `json:"win_dollars"`
	NumLosses   int     `json:"num_losses"`
	LoseDollars float64 `json:"lose_dollars"`
	ReturnPct   float64 `json:"return_pct"`
	Equity      float64 `json:"equity"`
	NumWins     int     `json:"num_wins"`
}

type LeaderboardResponse struct {
	Leaderboard []LeaderboardEntry `json:"leaderboard"`
}

type ModelAnalytics struct {
	Id                          string         `json:"id"`
	ModelId                     string         `json:"model_id"`
	UpdatedAt                   float64        `json:"updated_at"`
	FeePnlMovesBreakdownTable   BreakdownTable `json:"fee_pnl_moves_breakdown_table"`
	WinnersLosersBreakdownTable BreakdownTable `json:"winners_losers_breakdown_table"`
	SignalsBreakdownTable       BreakdownTable `json:"signals_breakdown_table"`
	LastTradeExitTime           float64        `json:"last_trade_exit_time"`
	InvocationBreakdownTable    BreakdownTable `json:"invocation_breakdown_table"`
	LongsShortsBreakdownTable   BreakdownTable `json:"longs_shorts_breakdown_table"`
	LastConvoDocId              string         `json:"last_convo_doc_id"`
	LastConvoTimestamp          float64        `json:"last_convo_timestamp"`
	OverallTradesOverviewTable  BreakdownTable `json:"overall_trades_overview_table"`
	LastTradeDocId              string         `json:"last_trade_doc_id"`
}

type ModelAnalyticsResponse struct {
	Analytics  ModelAnalytics `json:"analytics"`
	ServerTime int64          `json:"serverTime"`
}

type SinceInceptionValue struct {
	Id                string  `json:"id"`
	NavSinceInception float64 `json:"nav_since_inception"`
	InceptionDate     float64 `json:"inception_date"`
	NumInvocations    int     `json:"num_invocations"`
	ModelId           string  `json:"model_id"`
}

type SinceInceptionResponse struct {
	SinceInceptionValues []SinceInceptionValue `json:"sinceInceptionValues"`
	ServerTime           int64                 `json:"serverTime"`
}

type Trade struct {
	Id                     string      `json:"id"`
	ModelId                string      `json:"model_id"`
	Symbol                 string      `json:"symbol"`
	Side                   string      `json:"side"`
	TradeType              string      `json:"trade_type"`
	TradeId                string      `json:"trade_id"`
	Quantity               float64     `json:"quantity"`
	Leverage               float64     `json:"leverage"`
	Confidence             float64     `json:"confidence"`
	EntryPrice             float64     `json:"entry_price"`
	EntryTime              float64     `json:"entry_time"`
	EntryHumanTime         string      `json:"entry_human_time"`
	EntrySz                float64     `json:"entry_sz"`
	EntryTid               int64       `json:"entry_tid"`
	EntryOid               int64       `json:"entry_oid"`
	EntryCrossed           bool        `json:"entry_crossed"`
	EntryLiquidation       interface{} `json:"entry_liquidation"`
	EntryCommissionDollars float64     `json:"entry_commission_dollars"`
	EntryClosedPnl         float64     `json:"entry_closed_pnl"`
	ExitPrice              float64     `json:"exit_price"`
	ExitTime               float64     `json:"exit_time"`
	ExitHumanTime          string      `json:"exit_human_time"`
	ExitSz                 float64     `json:"exit_sz"`
	ExitTid                int64       `json:"exit_tid"`
	ExitOid                int64       `json:"exit_oid"`
	ExitCrossed            bool        `json:"exit_crossed"`
	ExitLiquidation        interface{} `json:"exit_liquidation"`
	ExitCommissionDollars  float64     `json:"exit_commission_dollars"`
	ExitClosedPnl          float64     `json:"exit_closed_pnl"`
	ExitPlan               interface{} `json:"exit_plan"`
	RealizedGrossPnl       float64     `json:"realized_gross_pnl"`
	RealizedNetPnl         float64     `json:"realized_net_pnl"`
	TotalCommissionDollars float64     `json:"total_commission_dollars"`
}

type TradesResponse struct {
	Trades     []Trade `json:"trades"`
	ServerTime int64   `json:"serverTime"`
}
